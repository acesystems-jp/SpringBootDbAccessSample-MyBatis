<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.acesystems.mybatissample.repository.employee.EmployeeMapper">
	<!--
		idを指定して1件取得する 
	 -->
	<select id="findById" parameterType="int" resultType="EmployeeDataModel">
		SELECT
			id,
			name,
			code,
			last_update_datetime,
			last_update_employee_id
		FROM
			employee
		WHERE
			id = #{id}
	</select>
	
	<select id="findByCode" parameterType="string" resultType="EmployeeDataModel">
		SELECT
			id,
			name,
			code,
			last_update_datetime,
			last_update_employee_id
		FROM
			employee
		WHERE
			code = #{code}
	</select>

	<!--
		全件取得する 
	 -->
	<select id="findAll" resultType="EmployeeDataModel">
		SELECT
			id,
			name,
			code,
			last_update_datetime,
			last_update_employee_id
		FROM
			employee
		ORDER BY
			id
	</select>

	<!--
		1件登録 IDがnullの時はDBの機能で採番する 
		useGeneratedKeys ... データベースの自動生成機能でPK値を取得するオプション
		keyProperty ... PK項目を指定するオプション。処理後にパラメータオブジェクトのPK項目に取得したPK値を設定する。
	 -->
	<insert id="insert" parameterType="EmployeeDataModel" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO employee
		(
			<if test='id != null'>
			id,
			</if>
			name,
			code,
			last_update_datetime,
			last_update_employee_id
		) VALUES (
			<if test='id != null'>
			#{id},
			</if>
			#{name},
			#{code},
			#{lastUpdateDatetime},
			#{lastUpdateEmployeeId}
		)
	</insert>

	<update id="update" parameterType="EmployeeDataModel">
		UPDATE employee
		SET
			name = #{name},
			code = #{code},
			last_update_datetime = #{lastUpdateDatetime},
			last_update_employee_id = #{lastUpdateEmployeeId}
		WHERE
			id = ${id}
	</update>
	<!--
		履歴テーブル1件登録 - 元テーブルを受け取る場合
	 -->
	<insert id="insertHistory" useGeneratedKeys="true" keyProperty="savedata.id">
		INSERT INTO employee_history
		(
			<!-- historyId 自動生成 -->
			id,
			name,
			code,
			last_update_datetime,
			last_update_employee_id,
			operation_datetime,
			operation
		) VALUES (
			#{savedata.id},
			#{savedata.name},
			#{savedata.code},
			#{savedata.lastUpdateDatetime},
			#{savedata.lastUpdateEmployeeId},
			Now(),
			#{operation}
		)
	</insert>
	<!--
		履歴テーブル1件登録 - 元テーブルを受け取る場合
	 -->
	<insert id="insertHistoryById" useGeneratedKeys="true">
		INSERT INTO employee_history
		(
			id,
			name,
			code,
			last_update_datetime,
			last_update_employee_id,
			operation_datetime,
			operation
		)
		SELECT 
			employee.id,
			employee.name,
			employee.code,
			employee.last_update_datetime,
			employee.last_update_employee_id,
			Now(),
			#{operation}
		FROM employee
		WHERE employee.id = #{id}
	</insert>

</mapper>